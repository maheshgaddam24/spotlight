export const apiPaths = {
  account: {
    root: '/account/',
    login: 'login/',
    signUp: 'register/',
  },
  dataload: {
    root: '/dataload/',
    csvUploadingFile:"syncCsvFile/",
    testConfigDatabase: 'getsparkTabledata/',
    dataBaseConnectionStatusCheck: 'sourceStatus',
    dataBaseConnectioFailStatus: 'fail_Msg',
    getDataBaseSourceId: 'getSourceId/',
    getDataBaseConnectionId: 'getConnId/',
    getDatabaseTablesList: 'getTableList/',
    postDataBaseTablesSelected: 'syncConnection/',
    postDataBaseTablesSelectedSDB: 'sqldfToTable/',
    getSourceData: 'getetlstatus/',
    getDataSource:'getdataSources/',
    getRunDagID: 'getAirflowData/',
    schedulingWorkflow: 'schedule/',
    pastFiveAirFlowDagRuns: 'getEtlgraphvalues/',
    getFiltrationTableColumns: 'get_columns/',
    getCsvTableColumns:"getcsvFileColumns/",
    csvDataLoad:"csvdftoTable/",
    syncdataSource:"syncdataSource/",
    manualSyncS3:"syncS3Sourcefile/",
    jobManualRun: "jobExecute/",
    s3RestApi:'gets3fileColumns/',
    amazonS3Api:'s3filetoTable/',
    tableLogs:'readLogs/?project_id='
  },
  api: {
    root: '/api/',
    projectList: 'project/',
    getprojectRoles: 'getprojectRoles/',
    userList: 'getUsers/',
    addContributer:'rolemanager/',
    connectingAzureBlobStorageAPI: 'v1/dags/Azure_Blob_Storage_Dag/dagRuns',
    getDataSourceList: 'dataSource/',
    getSchemaData: 'getSchemaData/?columns_name=',
    uploadSourceFile_api: 'uploaded_list/',
    getSilverLayerTableNames: 'getSilverTable/',
    getBronzeLayerTableColumns: 'getTableSchemaColumns/?table_name=',
    saveJoinTable: 'silvergoldtransform/?',
    getBronzeLayerTables: 'getBronzeTable/?project_id=',
    getSilverLayerColumns: 'getSilverSchemaColumn/?table_name=',
    checkSilverLayerColumns: 'checkColumnSilverTable/?table_name=',
    dataTypes: 'dataTypeView',
    sendSilverLayerTableColumns: 'alterTableSilver/?table_name=',
    getSourceTableData: 'getBronzeTableData/',
    saveSilverLayerTable: 'bronzeSilverInsert/?',
    dataQualityCheck: 'dataQualityCheck/',
    executeFilterGold: 'silvergoldtransform/?TABLE_NAME=',
    saveSilverLayerTableColumns: 'silverDataInsert/?silver_table_name=',
    goldLayerDashboard: 'getReportUrl/',
    getGoldLayerTableData: 'getGoldTable/',
    getSilverLayerTableData: 'getSilverTableData/',
    createNewTableSilverLayer: 'createTable/?table_name=',
    previewFilteredData: 'goldDataPreview/?case_stmt=',
    insertGoldData: 'goldDataCreate/?case_stmt=',
    saveRule: 'workflowrules/',
    saveGoldLayerData: 'getReportUrl/',
    workFlowTransition: 'workflowrules/project_id/layer_id/',
    auditLogs: 'audit/',
    getWorkflowDashboardData: 'workflowTransition/project_id/',
    saveWorkFlowTransition: 'workflowTransition/',
    workflowChartDataSet: 'getgraphvalues/',
    queryInsights: 'layerWiseBackTracking/?rule_id=',
    queryInsightsTreeData: 'getBronzeColumnsBacktracking',
    goldQueryInsightsTreeData: 'workFlowColumnBackTracking/?rule_id=',
    previewDataQueryInsights: 'layerDataPreviewBackTracking/?column_names=',
    exportAuditPdf: 'auditpdfexport/',
    goldLayerReport: 'getReportUrl/',
    ruleValidation: 'ruleValidation/',
    queryInsightReport:"exportRecordBacktracking/?project_id=",
    xsdupload: "xsdupload/",
    getXsdColumns: "getXsdColumns/",
    generateXMLwithXSD: "generateXMLwithXSD/",
    dataQualityChecks:"DqandQuerydata/?case_stmt=",
    creating_gold_layer_table:"DqandQuerydataCreate/?case_stmt=",
    applicationNotifications:'notifications/?user_id=',
    markSeenNotifications:'notifications/',
    execution_statics:"workflowTransition/?project_id=",
    project_view_statics:"getexecStats/",
    userProjectIDs:"getprojectID",
    getSilverLayerTableDataPreview: 'viewdata/',
    editQueryData:'getEditView/'
  },
};
